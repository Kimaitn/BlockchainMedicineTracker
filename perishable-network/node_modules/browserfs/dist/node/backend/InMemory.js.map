{"version":3,"file":"InMemory.js","sourceRoot":"","sources":["../../../src/backend/InMemory.ts"],"names":[],"mappings":";;;;;AAAA,qCAA6H,iCAAiC,CAAC,CAAA;AAE/J;;GAEG;AACH;IAAA;QACU,UAAK,GAA8B,EAAE,CAAC;IAwBhD,CAAC;IAtBQ,4BAAI,GAAX,cAAgB,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9B,6BAAK,GAAZ,cAAiB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;IAE5B,wCAAgB,GAAvB,UAAwB,IAAY;QAClC,MAAM,CAAC,IAAI,8CAAuB,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAEM,2BAAG,GAAV,UAAW,GAAW;QACpB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAEM,2BAAG,GAAV,UAAW,GAAW,EAAE,IAAY,EAAE,SAAkB;QACtD,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,2BAAG,GAAV,UAAW,GAAW;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IACH,oBAAC;AAAD,CAAC,AAzBD,IAyBC;AAzBY,qBAAa,gBAyBzB,CAAA;AAED;;GAEG;AACH;IAAgD,sCAAsB;IACpE;QACE,kBAAM,EAAE,KAAK,EAAE,IAAI,aAAa,EAAE,EAAE,CAAC,CAAC;IACxC,CAAC;IACH,yBAAC;AAAD,CAAC,AAJD,CAAgD,6CAAsB,GAIrE;AAJD;uCAIC,CAAA","sourcesContent":["import {SyncKeyValueStore, SimpleSyncStore, SimpleSyncRWTransaction, SyncKeyValueRWTransaction, SyncKeyValueFileSystem} from '../generic/key_value_filesystem';\n\n/**\n * A simple in-memory key-value store backed by a JavaScript object.\n */\nexport class InMemoryStore implements SyncKeyValueStore, SimpleSyncStore {\n  private store: { [key: string]: Buffer } = {};\n\n  public name() { return 'In-memory'; }\n  public clear() { this.store = {}; }\n\n  public beginTransaction(type: string): SyncKeyValueRWTransaction {\n    return new SimpleSyncRWTransaction(this);\n  }\n\n  public get(key: string): Buffer {\n    return this.store[key];\n  }\n\n  public put(key: string, data: Buffer, overwrite: boolean): boolean {\n    if (!overwrite && this.store.hasOwnProperty(key)) {\n      return false;\n    }\n    this.store[key] = data;\n    return true;\n  }\n\n  public del(key: string): void {\n    delete this.store[key];\n  }\n}\n\n/**\n * A simple in-memory file system backed by an InMemoryStore.\n */\nexport default class InMemoryFileSystem extends SyncKeyValueFileSystem {\n  constructor() {\n    super({ store: new InMemoryStore() });\n  }\n}\n"]}