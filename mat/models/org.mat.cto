namespace org.mat

// Status of a shipment
enum shipmentStatus 
{
  o IN_TRANSIT
  o ARRIVED
  o CANCELLED
}

// Status of a contract
enum contractStatus
{
  o WAITING_CONFIRMATION
  o CONFIRMED
  o COMPLETED
  o CANCELLED
}

// Business type
enum BusinessType
{
  o Manufacturer
  o Carrier
  o Distributor
}

// Employee type
enum EmployeeType
{
  o Admin
  o Regular
}

// Unit of Measure for ItemType
enum UoM 
{
  o mL
  o g
}

// Address concept for locations
concept Address
{
  o String city
  o String country
  o String street
  o String street2 optional
  o String state optional
  o String zip optional
}

// Packages of items to be delivered between businesses
concept Shipment
{
  o shipmentStatus status
  o Address destinationAddress
  o Address sourceAddress
  --> Business carryingBusiness
  --> Item[] items
}

// The item that is being requested within a contract
concept ItemRequest 
{
  --> ItemType requestedItem
  o Double unitPrice
  o Integer quantity
}

// An asset medication's colloquial name
asset ItemType identified by itemTypeName 
{
  o String itemTypeName
}

// Physical medicine that a business currently holds
asset Item identified by itemId
{
  o String itemId
  o UoM itemTypeUoM
  o Double amountOfMedication
  o String currentOwner
  --> ItemType itemType
  o Address[] locations
}

// An agreement for shipping goods between two businesses
asset Contract identified by contractId 
{
  o String contractId
  o contractStatus approvalStatusSellingBusiness
  o contractStatus approvalStatusBuyingBusiness
  o contractStatus status
  o DateTime arrivalDateTime
  o Shipment[] shipments optional
  o ItemRequest[] requestedItems
  --> Business sellingBusiness
  --> Business buyingBusiness
}

// The basic User class that will be using the system
asset User identified by userEmail 
{
  o String userEmail
  o String password
  o String employeeId
}

// Entities in the network that employees work for
asset Business identified by businessId 
{
  o String businessId
  o String name
  o BusinessType businessType
  o String PoCName optional
  o String PoCEmail optional
  o Address address 
  o Double accountBalance
  --> Item[] inventory optional
  --> Employee[] employees optional
}

// A string that ensures correct login by users
participant LoginChecker identified by loginCheckerId
{
  o String loginCheckerId
}

// Participants in a network that create contracts between each other and represent businesses
participant Employee identified by employeeId
{
  o String employeeId
  o String firstName
  o String lastName
  o String email
  o EmployeeType employeeType
  o String phoneNumber optional
  o String worksFor
}

// Allows the owner of an item to be changed
transaction UpdateItemOwner
{
  --> Business newOwner
  --> Business currentOwner
  --> Item item
  o Address newAddress optional
}

// Updates a contract if need be
abstract transaction UpdateContract
{
  --> Contract contract
}

// Allows the owner of a shipment to to be changed
transaction UpdateShipment extends UpdateContract
{
  --> Business newCarryingBusiness
  o shipmentStatus newStatus
  o Integer shipmentIndex
}

// Allows the owner of a shipment to to be changed
transaction ApproveShipments extends UpdateContract
{
  o Integer[] shipmentIndexes
}

// Bulk loads inventory in
transaction UpdateItemRequest extends UpdateContract
{
  o Integer itemRequestIndex
  o Double newUnitPrice
  o Integer newQuantity
}

// Approves a contract's changes
transaction ApproveContractChanges extends UpdateContract
{
  --> Employee acceptingEmployee
}

// Cancel a contract
transaction  CancelContract extends UpdateContract
{
  --> Employee denyingEmployee
}

// Complete a contract
transaction CompleteContract extends UpdateContract
{
}

// Updates the arrival time of a shipment on a contract
transaction UpdateContractArrivalDateTime extends UpdateContract 
{
  o DateTime newArrivalDateTime
}

// Adds a shipment to a contract
transaction AddShipmentToShipmentList extends UpdateContract
{
  o Shipment newShipment
}

// Removes a shipment in a contract
transaction RemoveShipmentFromShipmentList extends UpdateContract
{
  o Integer shipmentIndex
}

// Adds an itemRequest to a contract
transaction AddItemRequestsToRequestedItemsList extends UpdateContract
{
  o ItemRequest[] newItemRequests
}

// Removes an itemRequest from a contract
transaction RemoveItemRequestsFromRequestedItemsList extends UpdateContract
{
  o Integer[] itemRequestIndexes
}

// Updates user 
abstract transaction UpdateUser
{
  --> User user
}

// Updates a user's email
transaction UpdateUserEmail extends UpdateUser
{
  o String newUserEmail
}

// Update a user's password 
transaction UpdateUserPassword extends UpdateUser
{
  o String newUserPass
}

// Updates a business 
abstract transaction UpdateBusiness
{
  -->Business business
}

// Upadates business information
// business name, point of contact information, business address
transaction UpdateBusinessInfo extends UpdateBusiness 
{
  o String newBusinessName optional
  o String newPoCName optional
  o String newPoCEmail optional
  o Address newAddress optional
}

// Updates the account balance of a business
transaction UpdateBusinessAccBalance extends UpdateBusiness
{
  o Double newAccBalance
}

//call to bulk load invenotory from front end
transaction BulkLoad
{
  o Item[] items
  -->Business addingBusiness
}

// Removes an item from a business's inventory
transaction RemoveItemFromInventory extends UpdateBusiness
{
  -->Item removeItem
}

// Adds an item to a business's inventory
transaction AddItemToInventory extends UpdateBusiness
{
  -->Item addItem
}

// Removing an employee from a business 
transaction RemoveEmployeeFromBusiness extends UpdateBusiness
{
  -->Employee removeEmployee
}

// Adds an employee to a business
transaction AddEmployeeToBusiness extends UpdateBusiness
{
  -->Employee addEmployee
}

// Updates an employee
abstract transaction UpdateEmployee
{
  -->Employee employee
}

// Updates an employee's information 
// name, email, and phone number
transaction UpdateEmployeeInfo extends UpdateEmployee
{
  o String newFirstName optional
  o String newLastName optional
  o String newEmail optional
  o String newPhoneNumber optional
}

// Updates an employee's type
// admin, regular
transaction UpdateEmployeeType extends UpdateEmployeeInfo
{
  o EmployeeType newEmployeeType
}

/**
 * JUST FOR INITIALIZING A DEMO
 */
transaction SetupDemo 
{
}
